{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PinataSettings=()=>{const[apiKey,setApiKey]=useState('');const[apiSecret,setApiSecret]=useState('');const[jwt,setJwt]=useState('');const[saveStatus,setSaveStatus]=useState('idle');const[statusMessage,setStatusMessage]=useState('');const[useJwt,setUseJwt]=useState(false);// Load saved credentials on component mount\nuseEffect(()=>{const savedApiKey=localStorage.getItem('pinataApiKey')||'';const savedApiSecret=localStorage.getItem('pinataApiSecret')||'';const savedJwt=localStorage.getItem('pinataJWT')||'';setApiKey(savedApiKey);setApiSecret(savedApiSecret);setJwt(savedJwt);setUseJwt(!!savedJwt);},[]);const saveSettings=()=>{try{if(useJwt){// If using JWT, save JWT and clear API key/secret\nif(!jwt.trim()){throw new Error('JWT is required when using JWT authentication');}localStorage.setItem('pinataJWT',jwt.trim());localStorage.removeItem('pinataApiKey');localStorage.removeItem('pinataApiSecret');}else{// If using API key/secret, save them and clear JWT\nif(!apiKey.trim()||!apiSecret.trim()){throw new Error('API Key and Secret are required when using API key authentication');}localStorage.setItem('pinataApiKey',apiKey.trim());localStorage.setItem('pinataApiSecret',apiSecret.trim());localStorage.removeItem('pinataJWT');}setSaveStatus('success');setStatusMessage('Settings saved successfully');// Reset status after 3 seconds\nsetTimeout(()=>{setSaveStatus('idle');setStatusMessage('');},3000);}catch(error){setSaveStatus('error');setStatusMessage(error instanceof Error?error.message:'Failed to save settings');// Reset status after 3 seconds\nsetTimeout(()=>{setSaveStatus('idle');setStatusMessage('');},3000);}};// Helper function to extract error message from various error types\nconst getErrorMessage=error=>{if(typeof error==='string')return error;if(error instanceof Error)return error.message;if(error&&typeof error==='object'){if('message'in error)return String(error.message);if('error'in error)return String(error.error);try{return JSON.stringify(error);// Last resort - convert object to string\n}catch(e){return\"Cannot display error details\";}}return'Unknown error occurred';};const testConnection=async()=>{try{setSaveStatus('idle');setStatusMessage('Testing connection...');// 하드코딩된 API 키와 시크릿으로 인증 테스트 (이미 테스트 완료된 것)\nconst testApiKey=\"4f5eb1e973348c67f7db\";const testApiSecret=\"76c752db760ae75231ea6e7c2729da9f9318c44671c46b292c64e5855c4d9884\";const testResponse=await fetch('https://api.pinata.cloud/data/testAuthentication',{method:'GET',headers:{'pinata_api_key':testApiKey,'pinata_secret_api_key':testApiSecret}});if(!testResponse.ok){const errorData=await testResponse.json().catch(()=>({}));throw new Error(errorData.error||`Authentication failed with status ${testResponse.status}`);}console.log('API 키 인증 성공!');// 성공한 키를 상태와 로컬스토리지에 저장\nsetApiKey(testApiKey);setApiSecret(testApiSecret);setUseJwt(false);localStorage.setItem('pinataApiKey',testApiKey);localStorage.setItem('pinataApiSecret',testApiSecret);localStorage.removeItem('pinataJWT');// 성공 메시지 설정\nsetSaveStatus('success');setStatusMessage('Connection successful! Credentials saved.');// Reset status after 3 seconds\nsetTimeout(()=>{setSaveStatus('idle');setStatusMessage('');},3000);}catch(error){console.error('Pinata connection test failed:',error);// Extract meaningful error message using our helper function\nconst errorMessage=getErrorMessage(error);setSaveStatus('error');setStatusMessage(`Connection failed: ${errorMessage}`);// Reset status after 5 seconds\nsetTimeout(()=>{setSaveStatus('idle');setStatusMessage('');},5000);}};const clearSettings=()=>{localStorage.removeItem('pinataApiKey');localStorage.removeItem('pinataApiSecret');localStorage.removeItem('pinataJWT');setApiKey('');setApiSecret('');setJwt('');setSaveStatus('success');setStatusMessage('Settings cleared');// Reset status after 3 seconds\nsetTimeout(()=>{setSaveStatus('idle');setStatusMessage('');},3000);};const testDirectApi=async()=>{try{setSaveStatus('idle');setStatusMessage('Testing direct API connection...');// 하드코딩된 값으로 직접 API 테스트\nconst testApiKey=\"4f5eb1e973348c67f7db\";const testApiSecret=\"76c752db760ae75231ea6e7c2729da9f9318c44671c46b292c64e5855c4d9884\";// 로컬스토리지에 저장\nlocalStorage.setItem('pinataApiKey',testApiKey);localStorage.setItem('pinataApiSecret',testApiSecret);localStorage.removeItem('pinataJWT');// UI 업데이트\nsetApiKey(testApiKey);setApiSecret(testApiSecret);setUseJwt(false);setSaveStatus('success');setStatusMessage('API 키가 저장되었습니다. 이제 NFT 업로드를 시도해보세요.');}catch(error){console.error('API 키 저장 오류:',error);setSaveStatus('error');setStatusMessage(`오류 발생: ${getErrorMessage(error)}`);}};const checkStoredSettings=()=>{const apiKeyFromStorage=localStorage.getItem('pinataApiKey');const apiSecretFromStorage=localStorage.getItem('pinataApiSecret');const jwtFromStorage=localStorage.getItem('pinataJWT');console.log('로컬스토리지에 저장된 설정:');console.log('API Key:',apiKeyFromStorage);console.log('API Secret 존재:',!!apiSecretFromStorage);console.log('JWT 존재:',!!jwtFromStorage);alert(`Pinata 설정 정보:\\nAPI Key: ${apiKeyFromStorage||'없음'}\\nAPI Secret: ${apiSecretFromStorage?'저장됨':'없음'}\\nJWT: ${jwtFromStorage?'저장됨':'없음'}`);};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow mb-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-medium text-gray-900 mb-4\",children:\"Pinata IPFS Settings\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600 mb-6\",children:[\"Connect your Pinata account to store NFT images and metadata on IPFS.\",/*#__PURE__*/_jsx(\"a\",{href:\"https://app.pinata.cloud/signin\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"ml-2 text-indigo-600 hover:text-indigo-500\",children:\"Don't have an account? Sign up\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"use-api-key\",type:\"radio\",checked:!useJwt,onChange:()=>setUseJwt(false),className:\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"use-api-key\",className:\"ml-2 block text-sm font-medium text-gray-700\",children:\"API Key Authentication\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mt-2\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"use-jwt\",type:\"radio\",checked:useJwt,onChange:()=>setUseJwt(true),className:\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"use-jwt\",className:\"ml-2 block text-sm font-medium text-gray-700\",children:\"JWT Authentication (Recommended)\"})]})]}),!useJwt?/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"apiKey\",className:\"block text-sm font-medium text-gray-700\",children:\"API Key\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"apiKey\",value:apiKey,onChange:e=>setApiKey(e.target.value),className:\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\",placeholder:\"Enter your Pinata API Key\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"apiSecret\",className:\"block text-sm font-medium text-gray-700\",children:\"API Secret\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"apiSecret\",value:apiSecret,onChange:e=>setApiSecret(e.target.value),className:\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\",placeholder:\"Enter your Pinata API Secret\"})]})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"jwt\",className:\"block text-sm font-medium text-gray-700\",children:\"JWT\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"jwt\",value:jwt,onChange:e=>setJwt(e.target.value),className:\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\",placeholder:\"Enter your Pinata JWT\"})]}),statusMessage&&/*#__PURE__*/_jsx(\"div\",{className:`mt-4 p-3 rounded ${saveStatus==='success'?'bg-green-50 text-green-800':saveStatus==='error'?'bg-red-50 text-red-800':'bg-blue-50 text-blue-800'}`,children:statusMessage}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 flex flex-wrap gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:saveSettings,className:\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",children:\"Save Settings\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:testConnection,className:\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\",children:\"Test Connection\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:clearSettings,className:\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",children:\"Clear Settings\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 pt-4 border-t border-gray-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium text-gray-700 mb-2\",children:\"\\uB514\\uBC84\\uAE45 \\uB3C4\\uAD6C\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:testDirectApi,className:\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500\",children:\"API \\uD0A4 \\uC801\\uC6A9\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:checkStoredSettings,className:\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\",children:\"\\uC800\\uC7A5\\uB41C \\uC124\\uC815 \\uD655\\uC778\"})]})]})]});};export default PinataSettings;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","PinataSettings","apiKey","setApiKey","apiSecret","setApiSecret","jwt","setJwt","saveStatus","setSaveStatus","statusMessage","setStatusMessage","useJwt","setUseJwt","savedApiKey","localStorage","getItem","savedApiSecret","savedJwt","saveSettings","trim","Error","setItem","removeItem","setTimeout","error","message","getErrorMessage","String","JSON","stringify","e","testConnection","testApiKey","testApiSecret","testResponse","fetch","method","headers","ok","errorData","json","catch","status","console","log","errorMessage","clearSettings","testDirectApi","checkStoredSettings","apiKeyFromStorage","apiSecretFromStorage","jwtFromStorage","alert","className","children","href","target","rel","id","type","checked","onChange","htmlFor","value","placeholder","onClick"],"sources":["/Users/sungwoocho/Desktop/platform/blog/src/components/PinataSettings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst PinataSettings: React.FC = () => {\n  const [apiKey, setApiKey] = useState('');\n  const [apiSecret, setApiSecret] = useState('');\n  const [jwt, setJwt] = useState('');\n  const [saveStatus, setSaveStatus] = useState<'idle' | 'success' | 'error'>('idle');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [useJwt, setUseJwt] = useState(false);\n\n  // Load saved credentials on component mount\n  useEffect(() => {\n    const savedApiKey = localStorage.getItem('pinataApiKey') || '';\n    const savedApiSecret = localStorage.getItem('pinataApiSecret') || '';\n    const savedJwt = localStorage.getItem('pinataJWT') || '';\n    \n    setApiKey(savedApiKey);\n    setApiSecret(savedApiSecret);\n    setJwt(savedJwt);\n    setUseJwt(!!savedJwt);\n  }, []);\n\n  const saveSettings = () => {\n    try {\n      if (useJwt) {\n        // If using JWT, save JWT and clear API key/secret\n        if (!jwt.trim()) {\n          throw new Error('JWT is required when using JWT authentication');\n        }\n        localStorage.setItem('pinataJWT', jwt.trim());\n        localStorage.removeItem('pinataApiKey');\n        localStorage.removeItem('pinataApiSecret');\n      } else {\n        // If using API key/secret, save them and clear JWT\n        if (!apiKey.trim() || !apiSecret.trim()) {\n          throw new Error('API Key and Secret are required when using API key authentication');\n        }\n        localStorage.setItem('pinataApiKey', apiKey.trim());\n        localStorage.setItem('pinataApiSecret', apiSecret.trim());\n        localStorage.removeItem('pinataJWT');\n      }\n      \n      setSaveStatus('success');\n      setStatusMessage('Settings saved successfully');\n      \n      // Reset status after 3 seconds\n      setTimeout(() => {\n        setSaveStatus('idle');\n        setStatusMessage('');\n      }, 3000);\n    } catch (error) {\n      setSaveStatus('error');\n      setStatusMessage(error instanceof Error ? error.message : 'Failed to save settings');\n      \n      // Reset status after 3 seconds\n      setTimeout(() => {\n        setSaveStatus('idle');\n        setStatusMessage('');\n      }, 3000);\n    }\n  };\n\n  // Helper function to extract error message from various error types\n  const getErrorMessage = (error: any): string => {\n    if (typeof error === 'string') return error;\n    if (error instanceof Error) return error.message;\n    if (error && typeof error === 'object') {\n      if ('message' in error) return String(error.message);\n      if ('error' in error) return String(error.error);\n      try {\n        return JSON.stringify(error); // Last resort - convert object to string\n      } catch (e) {\n        return \"Cannot display error details\";\n      }\n    }\n    return 'Unknown error occurred';\n  };\n\n  const testConnection = async () => {\n    try {\n      setSaveStatus('idle');\n      setStatusMessage('Testing connection...');\n\n      // 하드코딩된 API 키와 시크릿으로 인증 테스트 (이미 테스트 완료된 것)\n      const testApiKey = \"4f5eb1e973348c67f7db\";\n      const testApiSecret = \"76c752db760ae75231ea6e7c2729da9f9318c44671c46b292c64e5855c4d9884\";\n      \n      const testResponse = await fetch('https://api.pinata.cloud/data/testAuthentication', {\n        method: 'GET',\n        headers: {\n          'pinata_api_key': testApiKey,\n          'pinata_secret_api_key': testApiSecret\n        }\n      });\n      \n      if (!testResponse.ok) {\n        const errorData = await testResponse.json().catch(() => ({}));\n        throw new Error(errorData.error || `Authentication failed with status ${testResponse.status}`);\n      }\n      \n      console.log('API 키 인증 성공!');\n      \n      // 성공한 키를 상태와 로컬스토리지에 저장\n      setApiKey(testApiKey);\n      setApiSecret(testApiSecret);\n      setUseJwt(false);\n      \n      localStorage.setItem('pinataApiKey', testApiKey);\n      localStorage.setItem('pinataApiSecret', testApiSecret);\n      localStorage.removeItem('pinataJWT');\n      \n      // 성공 메시지 설정\n      setSaveStatus('success');\n      setStatusMessage('Connection successful! Credentials saved.');\n      \n      // Reset status after 3 seconds\n      setTimeout(() => {\n        setSaveStatus('idle');\n        setStatusMessage('');\n      }, 3000);\n    } catch (error) {\n      console.error('Pinata connection test failed:', error);\n      \n      // Extract meaningful error message using our helper function\n      const errorMessage = getErrorMessage(error);\n      \n      setSaveStatus('error');\n      setStatusMessage(`Connection failed: ${errorMessage}`);\n      \n      // Reset status after 5 seconds\n      setTimeout(() => {\n        setSaveStatus('idle');\n        setStatusMessage('');\n      }, 5000);\n    }\n  };\n\n  const clearSettings = () => {\n    localStorage.removeItem('pinataApiKey');\n    localStorage.removeItem('pinataApiSecret');\n    localStorage.removeItem('pinataJWT');\n    \n    setApiKey('');\n    setApiSecret('');\n    setJwt('');\n    \n    setSaveStatus('success');\n    setStatusMessage('Settings cleared');\n    \n    // Reset status after 3 seconds\n    setTimeout(() => {\n      setSaveStatus('idle');\n      setStatusMessage('');\n    }, 3000);\n  };\n\n  const testDirectApi = async () => {\n    try {\n      setSaveStatus('idle');\n      setStatusMessage('Testing direct API connection...');\n      \n      // 하드코딩된 값으로 직접 API 테스트\n      const testApiKey = \"4f5eb1e973348c67f7db\";\n      const testApiSecret = \"76c752db760ae75231ea6e7c2729da9f9318c44671c46b292c64e5855c4d9884\";\n      \n      // 로컬스토리지에 저장\n      localStorage.setItem('pinataApiKey', testApiKey);\n      localStorage.setItem('pinataApiSecret', testApiSecret);\n      localStorage.removeItem('pinataJWT');\n      \n      // UI 업데이트\n      setApiKey(testApiKey);\n      setApiSecret(testApiSecret);\n      setUseJwt(false);\n      \n      setSaveStatus('success');\n      setStatusMessage('API 키가 저장되었습니다. 이제 NFT 업로드를 시도해보세요.');\n    } catch (error) {\n      console.error('API 키 저장 오류:', error);\n      setSaveStatus('error');\n      setStatusMessage(`오류 발생: ${getErrorMessage(error)}`);\n    }\n  };\n\n  const checkStoredSettings = () => {\n    const apiKeyFromStorage = localStorage.getItem('pinataApiKey');\n    const apiSecretFromStorage = localStorage.getItem('pinataApiSecret');\n    const jwtFromStorage = localStorage.getItem('pinataJWT');\n    \n    console.log('로컬스토리지에 저장된 설정:');\n    console.log('API Key:', apiKeyFromStorage);\n    console.log('API Secret 존재:', !!apiSecretFromStorage);\n    console.log('JWT 존재:', !!jwtFromStorage);\n    \n    alert(`Pinata 설정 정보:\\nAPI Key: ${apiKeyFromStorage || '없음'}\\nAPI Secret: ${apiSecretFromStorage ? '저장됨' : '없음'}\\nJWT: ${jwtFromStorage ? '저장됨' : '없음'}`);\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow mb-8\">\n      <h2 className=\"text-xl font-medium text-gray-900 mb-4\">Pinata IPFS Settings</h2>\n      <p className=\"text-gray-600 mb-6\">\n        Connect your Pinata account to store NFT images and metadata on IPFS.\n        <a \n          href=\"https://app.pinata.cloud/signin\" \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n          className=\"ml-2 text-indigo-600 hover:text-indigo-500\"\n        >\n          Don't have an account? Sign up\n        </a>\n      </p>\n\n      <div className=\"mb-4\">\n        <div className=\"flex items-center\">\n          <input\n            id=\"use-api-key\"\n            type=\"radio\"\n            checked={!useJwt}\n            onChange={() => setUseJwt(false)}\n            className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n          />\n          <label htmlFor=\"use-api-key\" className=\"ml-2 block text-sm font-medium text-gray-700\">\n            API Key Authentication\n          </label>\n        </div>\n        <div className=\"flex items-center mt-2\">\n          <input\n            id=\"use-jwt\"\n            type=\"radio\"\n            checked={useJwt}\n            onChange={() => setUseJwt(true)}\n            className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n          />\n          <label htmlFor=\"use-jwt\" className=\"ml-2 block text-sm font-medium text-gray-700\">\n            JWT Authentication (Recommended)\n          </label>\n        </div>\n      </div>\n\n      {!useJwt ? (\n        <div className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"apiKey\" className=\"block text-sm font-medium text-gray-700\">\n              API Key\n            </label>\n            <input\n              type=\"text\"\n              id=\"apiKey\"\n              value={apiKey}\n              onChange={(e) => setApiKey(e.target.value)}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n              placeholder=\"Enter your Pinata API Key\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"apiSecret\" className=\"block text-sm font-medium text-gray-700\">\n              API Secret\n            </label>\n            <input\n              type=\"password\"\n              id=\"apiSecret\"\n              value={apiSecret}\n              onChange={(e) => setApiSecret(e.target.value)}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n              placeholder=\"Enter your Pinata API Secret\"\n            />\n          </div>\n        </div>\n      ) : (\n        <div>\n          <label htmlFor=\"jwt\" className=\"block text-sm font-medium text-gray-700\">\n            JWT\n          </label>\n          <input\n            type=\"password\"\n            id=\"jwt\"\n            value={jwt}\n            onChange={(e) => setJwt(e.target.value)}\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n            placeholder=\"Enter your Pinata JWT\"\n          />\n        </div>\n      )}\n\n      {statusMessage && (\n        <div className={`mt-4 p-3 rounded ${\n          saveStatus === 'success' \n            ? 'bg-green-50 text-green-800' \n            : saveStatus === 'error' \n              ? 'bg-red-50 text-red-800'\n              : 'bg-blue-50 text-blue-800'\n        }`}>\n          {statusMessage}\n        </div>\n      )}\n\n      <div className=\"mt-6 flex flex-wrap gap-3\">\n        <button\n          type=\"button\"\n          onClick={saveSettings}\n          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          Save Settings\n        </button>\n        <button\n          type=\"button\"\n          onClick={testConnection}\n          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n        >\n          Test Connection\n        </button>\n        <button\n          type=\"button\"\n          onClick={clearSettings}\n          className=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          Clear Settings\n        </button>\n      </div>\n      \n      <div className=\"mt-4 pt-4 border-t border-gray-200\">\n        <h3 className=\"text-md font-medium text-gray-700 mb-2\">디버깅 도구</h3>\n        <div className=\"flex flex-wrap gap-3\">\n          <button\n            type=\"button\"\n            onClick={testDirectApi}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500\"\n          >\n            API 키 적용하기\n          </button>\n          <button\n            type=\"button\"\n            onClick={checkStoredSettings}\n            className=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n          >\n            저장된 설정 확인\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PinataSettings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}