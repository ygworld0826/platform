{"ast":null,"code":"const STORAGE_KEY = 'platform_lectures';\n\n// Save lectures to localStorage\nexport const saveLectures = lectures => {\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(lectures));\n  } catch (error) {\n    console.error('Error saving lectures to localStorage:', error);\n  }\n};\n\n// Get all lectures from localStorage\nexport const getLectures = () => {\n  try {\n    const lecturesData = localStorage.getItem(STORAGE_KEY);\n    if (!lecturesData) return [];\n    return JSON.parse(lecturesData);\n  } catch (error) {\n    console.error('Error retrieving lectures from localStorage:', error);\n    return [];\n  }\n};\n\n// Add a new lecture\nexport const addLecture = lecture => {\n  const lectures = getLectures();\n  lectures.push(lecture);\n  saveLectures(lectures);\n};\n\n// Update an existing lecture\nexport const updateLecture = updatedLecture => {\n  const lectures = getLectures();\n  const index = lectures.findIndex(lecture => lecture.id === updatedLecture.id);\n  if (index !== -1) {\n    lectures[index] = updatedLecture;\n    saveLectures(lectures);\n  }\n};\n\n// Delete a lecture\nexport const deleteLecture = lectureId => {\n  const lectures = getLectures();\n  const filteredLectures = lectures.filter(lecture => lecture.id !== lectureId);\n  saveLectures(filteredLectures);\n};\n\n// Get lectures for a specific module\nexport const getLecturesByModule = moduleId => {\n  const lectures = getLectures();\n  return lectures.filter(lecture => lecture.module === moduleId).sort((a, b) => a.order - b.order);\n};\n\n// Get a lecture by ID\nexport const getLectureById = lectureId => {\n  const lectures = getLectures();\n  return lectures.find(lecture => lecture.id === lectureId);\n};\n\n// Generate a unique ID for new lectures\nexport const generateId = () => {\n  return Date.now().toString(36) + Math.random().toString(36).substring(2);\n};","map":{"version":3,"names":["STORAGE_KEY","saveLectures","lectures","localStorage","setItem","JSON","stringify","error","console","getLectures","lecturesData","getItem","parse","addLecture","lecture","push","updateLecture","updatedLecture","index","findIndex","id","deleteLecture","lectureId","filteredLectures","filter","getLecturesByModule","moduleId","module","sort","a","b","order","getLectureById","find","generateId","Date","now","toString","Math","random","substring"],"sources":["/Users/sungwoocho/Desktop/platform/blog/src/services/storage.ts"],"sourcesContent":["import { Lecture } from '../types';\n\nconst STORAGE_KEY = 'platform_lectures';\n\n// Save lectures to localStorage\nexport const saveLectures = (lectures: Lecture[]): void => {\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(lectures));\n  } catch (error) {\n    console.error('Error saving lectures to localStorage:', error);\n  }\n};\n\n// Get all lectures from localStorage\nexport const getLectures = (): Lecture[] => {\n  try {\n    const lecturesData = localStorage.getItem(STORAGE_KEY);\n    if (!lecturesData) return [];\n    return JSON.parse(lecturesData);\n  } catch (error) {\n    console.error('Error retrieving lectures from localStorage:', error);\n    return [];\n  }\n};\n\n// Add a new lecture\nexport const addLecture = (lecture: Lecture): void => {\n  const lectures = getLectures();\n  lectures.push(lecture);\n  saveLectures(lectures);\n};\n\n// Update an existing lecture\nexport const updateLecture = (updatedLecture: Lecture): void => {\n  const lectures = getLectures();\n  const index = lectures.findIndex(lecture => lecture.id === updatedLecture.id);\n  \n  if (index !== -1) {\n    lectures[index] = updatedLecture;\n    saveLectures(lectures);\n  }\n};\n\n// Delete a lecture\nexport const deleteLecture = (lectureId: string): void => {\n  const lectures = getLectures();\n  const filteredLectures = lectures.filter(lecture => lecture.id !== lectureId);\n  saveLectures(filteredLectures);\n};\n\n// Get lectures for a specific module\nexport const getLecturesByModule = (moduleId: string): Lecture[] => {\n  const lectures = getLectures();\n  return lectures\n    .filter(lecture => lecture.module === moduleId)\n    .sort((a, b) => a.order - b.order);\n};\n\n// Get a lecture by ID\nexport const getLectureById = (lectureId: string): Lecture | undefined => {\n  const lectures = getLectures();\n  return lectures.find(lecture => lecture.id === lectureId);\n};\n\n// Generate a unique ID for new lectures\nexport const generateId = (): string => {\n  return Date.now().toString(36) + Math.random().toString(36).substring(2);\n};"],"mappings":"AAEA,MAAMA,WAAW,GAAG,mBAAmB;;AAEvC;AACA,OAAO,MAAMC,YAAY,GAAIC,QAAmB,IAAW;EACzD,IAAI;IACFC,YAAY,CAACC,OAAO,CAACJ,WAAW,EAAEK,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;EAChE;AACF,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAiB;EAC1C,IAAI;IACF,MAAMC,YAAY,GAAGP,YAAY,CAACQ,OAAO,CAACX,WAAW,CAAC;IACtD,IAAI,CAACU,YAAY,EAAE,OAAO,EAAE;IAC5B,OAAOL,IAAI,CAACO,KAAK,CAACF,YAAY,CAAC;EACjC,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACpE,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,UAAU,GAAIC,OAAgB,IAAW;EACpD,MAAMZ,QAAQ,GAAGO,WAAW,CAAC,CAAC;EAC9BP,QAAQ,CAACa,IAAI,CAACD,OAAO,CAAC;EACtBb,YAAY,CAACC,QAAQ,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMc,aAAa,GAAIC,cAAuB,IAAW;EAC9D,MAAMf,QAAQ,GAAGO,WAAW,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAGhB,QAAQ,CAACiB,SAAS,CAACL,OAAO,IAAIA,OAAO,CAACM,EAAE,KAAKH,cAAc,CAACG,EAAE,CAAC;EAE7E,IAAIF,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBhB,QAAQ,CAACgB,KAAK,CAAC,GAAGD,cAAc;IAChChB,YAAY,CAACC,QAAQ,CAAC;EACxB;AACF,CAAC;;AAED;AACA,OAAO,MAAMmB,aAAa,GAAIC,SAAiB,IAAW;EACxD,MAAMpB,QAAQ,GAAGO,WAAW,CAAC,CAAC;EAC9B,MAAMc,gBAAgB,GAAGrB,QAAQ,CAACsB,MAAM,CAACV,OAAO,IAAIA,OAAO,CAACM,EAAE,KAAKE,SAAS,CAAC;EAC7ErB,YAAY,CAACsB,gBAAgB,CAAC;AAChC,CAAC;;AAED;AACA,OAAO,MAAME,mBAAmB,GAAIC,QAAgB,IAAgB;EAClE,MAAMxB,QAAQ,GAAGO,WAAW,CAAC,CAAC;EAC9B,OAAOP,QAAQ,CACZsB,MAAM,CAACV,OAAO,IAAIA,OAAO,CAACa,MAAM,KAAKD,QAAQ,CAAC,CAC9CE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAIV,SAAiB,IAA0B;EACxE,MAAMpB,QAAQ,GAAGO,WAAW,CAAC,CAAC;EAC9B,OAAOP,QAAQ,CAAC+B,IAAI,CAACnB,OAAO,IAAIA,OAAO,CAACM,EAAE,KAAKE,SAAS,CAAC;AAC3D,CAAC;;AAED;AACA,OAAO,MAAMY,UAAU,GAAGA,CAAA,KAAc;EACtC,OAAOC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACF,QAAQ,CAAC,EAAE,CAAC,CAACG,SAAS,CAAC,CAAC,CAAC;AAC1E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}