{"ast":null,"code":"var _jsxFileName = \"/Users/sungwoocho/Desktop/platform/blog/src/components/PinataSettings.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PinataSettings = () => {\n  _s();\n  const [apiKey, setApiKey] = useState('');\n  const [apiSecret, setApiSecret] = useState('');\n  const [jwt, setJwt] = useState('');\n  const [saveStatus, setSaveStatus] = useState('idle');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [useJwt, setUseJwt] = useState(false);\n\n  // Load saved credentials on component mount\n  useEffect(() => {\n    const savedApiKey = localStorage.getItem('pinataApiKey') || '';\n    const savedApiSecret = localStorage.getItem('pinataApiSecret') || '';\n    const savedJwt = localStorage.getItem('pinataJWT') || '';\n    setApiKey(savedApiKey);\n    setApiSecret(savedApiSecret);\n    setJwt(savedJwt);\n    setUseJwt(!!savedJwt);\n  }, []);\n  const saveSettings = () => {\n    try {\n      if (useJwt) {\n        // If using JWT, save JWT and clear API key/secret\n        if (!jwt.trim()) {\n          throw new Error('JWT is required when using JWT authentication');\n        }\n        localStorage.setItem('pinataJWT', jwt.trim());\n        localStorage.removeItem('pinataApiKey');\n        localStorage.removeItem('pinataApiSecret');\n      } else {\n        // If using API key/secret, save them and clear JWT\n        if (!apiKey.trim() || !apiSecret.trim()) {\n          throw new Error('API Key and Secret are required when using API key authentication');\n        }\n        localStorage.setItem('pinataApiKey', apiKey.trim());\n        localStorage.setItem('pinataApiSecret', apiSecret.trim());\n        localStorage.removeItem('pinataJWT');\n      }\n      setSaveStatus('success');\n      setStatusMessage('Settings saved successfully');\n\n      // Reset status after 3 seconds\n      setTimeout(() => {\n        setSaveStatus('idle');\n        setStatusMessage('');\n      }, 3000);\n    } catch (error) {\n      setSaveStatus('error');\n      setStatusMessage(error instanceof Error ? error.message : 'Failed to save settings');\n\n      // Reset status after 3 seconds\n      setTimeout(() => {\n        setSaveStatus('idle');\n        setStatusMessage('');\n      }, 3000);\n    }\n  };\n\n  // Helper function to extract error message from various error types\n  const getErrorMessage = error => {\n    if (typeof error === 'string') return error;\n    if (error instanceof Error) return error.message;\n    if (error && typeof error === 'object') {\n      if ('message' in error) return String(error.message);\n      if ('error' in error) return String(error.error);\n      try {\n        return JSON.stringify(error); // Last resort - convert object to string\n      } catch (e) {\n        return \"Cannot display error details\";\n      }\n    }\n    return 'Unknown error occurred';\n  };\n  const testConnection = async () => {\n    try {\n      setSaveStatus('idle');\n      setStatusMessage('Testing connection...');\n\n      // 하드코딩된 API 키와 시크릿으로 인증 테스트 (이미 테스트 완료된 것)\n      const testApiKey = \"4f5eb1e973348c67f7db\";\n      const testApiSecret = \"76c752db760ae75231ea6e7c2729da9f9318c44671c46b292c64e5855c4d9884\";\n      const testResponse = await fetch('https://api.pinata.cloud/data/testAuthentication', {\n        method: 'GET',\n        headers: {\n          'pinata_api_key': testApiKey,\n          'pinata_secret_api_key': testApiSecret\n        }\n      });\n      if (!testResponse.ok) {\n        const errorData = await testResponse.json().catch(() => ({}));\n        throw new Error(errorData.error || `Authentication failed with status ${testResponse.status}`);\n      }\n      console.log('API 키 인증 성공!');\n\n      // 성공한 키를 상태와 로컬스토리지에 저장\n      setApiKey(testApiKey);\n      setApiSecret(testApiSecret);\n      setUseJwt(false);\n      localStorage.setItem('pinataApiKey', testApiKey);\n      localStorage.setItem('pinataApiSecret', testApiSecret);\n      localStorage.removeItem('pinataJWT');\n\n      // 성공 메시지 설정\n      setSaveStatus('success');\n      setStatusMessage('Connection successful! Credentials saved.');\n\n      // Reset status after 3 seconds\n      setTimeout(() => {\n        setSaveStatus('idle');\n        setStatusMessage('');\n      }, 3000);\n    } catch (error) {\n      console.error('Pinata connection test failed:', error);\n\n      // Extract meaningful error message using our helper function\n      const errorMessage = getErrorMessage(error);\n      setSaveStatus('error');\n      setStatusMessage(`Connection failed: ${errorMessage}`);\n\n      // Reset status after 5 seconds\n      setTimeout(() => {\n        setSaveStatus('idle');\n        setStatusMessage('');\n      }, 5000);\n    }\n  };\n  const clearSettings = () => {\n    localStorage.removeItem('pinataApiKey');\n    localStorage.removeItem('pinataApiSecret');\n    localStorage.removeItem('pinataJWT');\n    setApiKey('');\n    setApiSecret('');\n    setJwt('');\n    setSaveStatus('success');\n    setStatusMessage('Settings cleared');\n\n    // Reset status after 3 seconds\n    setTimeout(() => {\n      setSaveStatus('idle');\n      setStatusMessage('');\n    }, 3000);\n  };\n  const testDirectApi = async () => {\n    try {\n      setSaveStatus('idle');\n      setStatusMessage('Testing direct API connection...');\n\n      // 하드코딩된 값으로 직접 API 테스트\n      const testApiKey = \"4f5eb1e973348c67f7db\";\n      const testApiSecret = \"76c752db760ae75231ea6e7c2729da9f9318c44671c46b292c64e5855c4d9884\";\n\n      // 로컬스토리지에 저장\n      localStorage.setItem('pinataApiKey', testApiKey);\n      localStorage.setItem('pinataApiSecret', testApiSecret);\n      localStorage.removeItem('pinataJWT');\n\n      // UI 업데이트\n      setApiKey(testApiKey);\n      setApiSecret(testApiSecret);\n      setUseJwt(false);\n      setSaveStatus('success');\n      setStatusMessage('API 키가 저장되었습니다. 이제 NFT 업로드를 시도해보세요.');\n    } catch (error) {\n      console.error('API 키 저장 오류:', error);\n      setSaveStatus('error');\n      setStatusMessage(`오류 발생: ${getErrorMessage(error)}`);\n    }\n  };\n  const checkStoredSettings = () => {\n    const apiKeyFromStorage = localStorage.getItem('pinataApiKey');\n    const apiSecretFromStorage = localStorage.getItem('pinataApiSecret');\n    const jwtFromStorage = localStorage.getItem('pinataJWT');\n    console.log('로컬스토리지에 저장된 설정:');\n    console.log('API Key:', apiKeyFromStorage);\n    console.log('API Secret 존재:', !!apiSecretFromStorage);\n    console.log('JWT 존재:', !!jwtFromStorage);\n    alert(`Pinata 설정 정보:\\nAPI Key: ${apiKeyFromStorage || '없음'}\\nAPI Secret: ${apiSecretFromStorage ? '저장됨' : '없음'}\\nJWT: ${jwtFromStorage ? '저장됨' : '없음'}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow mb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-medium text-gray-900 mb-4\",\n      children: \"Pinata IPFS Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 mb-6\",\n      children: [\"Connect your Pinata account to store NFT images and metadata on IPFS.\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://app.pinata.cloud/signin\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"ml-2 text-indigo-600 hover:text-indigo-500\",\n        children: \"Don't have an account? Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"use-api-key\",\n          type: \"radio\",\n          checked: !useJwt,\n          onChange: () => setUseJwt(false),\n          className: \"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"use-api-key\",\n          className: \"ml-2 block text-sm font-medium text-gray-700\",\n          children: \"API Key Authentication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"use-jwt\",\n          type: \"radio\",\n          checked: useJwt,\n          onChange: () => setUseJwt(true),\n          className: \"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"use-jwt\",\n          className: \"ml-2 block text-sm font-medium text-gray-700\",\n          children: \"JWT Authentication (Recommended)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), !useJwt ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"apiKey\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"API Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"apiKey\",\n          value: apiKey,\n          onChange: e => setApiKey(e.target.value),\n          className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\",\n          placeholder: \"Enter your Pinata API Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"apiSecret\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"API Secret\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"apiSecret\",\n          value: apiSecret,\n          onChange: e => setApiSecret(e.target.value),\n          className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\",\n          placeholder: \"Enter your Pinata API Secret\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"jwt\",\n        className: \"block text-sm font-medium text-gray-700\",\n        children: \"JWT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"jwt\",\n        value: jwt,\n        onChange: e => setJwt(e.target.value),\n        className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\",\n        placeholder: \"Enter your Pinata JWT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mt-4 p-3 rounded ${saveStatus === 'success' ? 'bg-green-50 text-green-800' : saveStatus === 'error' ? 'bg-red-50 text-red-800' : 'bg-blue-50 text-blue-800'}`,\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 flex flex-wrap gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: saveSettings,\n        className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n        children: \"Save Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: testConnection,\n        className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\",\n        children: \"Test Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: clearSettings,\n        className: \"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n        children: \"Clear Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 pt-4 border-t border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-md font-medium text-gray-700 mb-2\",\n        children: \"\\uB514\\uBC84\\uAE45 \\uB3C4\\uAD6C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: testDirectApi,\n          className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500\",\n          children: \"API \\uD0A4 \\uC801\\uC6A9\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: checkStoredSettings,\n          className: \"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\",\n          children: \"\\uC800\\uC7A5\\uB41C \\uC124\\uC815 \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(PinataSettings, \"rtQraPukAvRRQxhgpkN6HI06Z9c=\");\n_c = PinataSettings;\nexport default PinataSettings;\nvar _c;\n$RefreshReg$(_c, \"PinataSettings\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PinataSettings","_s","apiKey","setApiKey","apiSecret","setApiSecret","jwt","setJwt","saveStatus","setSaveStatus","statusMessage","setStatusMessage","useJwt","setUseJwt","savedApiKey","localStorage","getItem","savedApiSecret","savedJwt","saveSettings","trim","Error","setItem","removeItem","setTimeout","error","message","getErrorMessage","String","JSON","stringify","e","testConnection","testApiKey","testApiSecret","testResponse","fetch","method","headers","ok","errorData","json","catch","status","console","log","errorMessage","clearSettings","testDirectApi","checkStoredSettings","apiKeyFromStorage","apiSecretFromStorage","jwtFromStorage","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","id","type","checked","onChange","htmlFor","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/sungwoocho/Desktop/platform/blog/src/components/PinataSettings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst PinataSettings: React.FC = () => {\n  const [apiKey, setApiKey] = useState('');\n  const [apiSecret, setApiSecret] = useState('');\n  const [jwt, setJwt] = useState('');\n  const [saveStatus, setSaveStatus] = useState<'idle' | 'success' | 'error'>('idle');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [useJwt, setUseJwt] = useState(false);\n\n  // Load saved credentials on component mount\n  useEffect(() => {\n    const savedApiKey = localStorage.getItem('pinataApiKey') || '';\n    const savedApiSecret = localStorage.getItem('pinataApiSecret') || '';\n    const savedJwt = localStorage.getItem('pinataJWT') || '';\n    \n    setApiKey(savedApiKey);\n    setApiSecret(savedApiSecret);\n    setJwt(savedJwt);\n    setUseJwt(!!savedJwt);\n  }, []);\n\n  const saveSettings = () => {\n    try {\n      if (useJwt) {\n        // If using JWT, save JWT and clear API key/secret\n        if (!jwt.trim()) {\n          throw new Error('JWT is required when using JWT authentication');\n        }\n        localStorage.setItem('pinataJWT', jwt.trim());\n        localStorage.removeItem('pinataApiKey');\n        localStorage.removeItem('pinataApiSecret');\n      } else {\n        // If using API key/secret, save them and clear JWT\n        if (!apiKey.trim() || !apiSecret.trim()) {\n          throw new Error('API Key and Secret are required when using API key authentication');\n        }\n        localStorage.setItem('pinataApiKey', apiKey.trim());\n        localStorage.setItem('pinataApiSecret', apiSecret.trim());\n        localStorage.removeItem('pinataJWT');\n      }\n      \n      setSaveStatus('success');\n      setStatusMessage('Settings saved successfully');\n      \n      // Reset status after 3 seconds\n      setTimeout(() => {\n        setSaveStatus('idle');\n        setStatusMessage('');\n      }, 3000);\n    } catch (error) {\n      setSaveStatus('error');\n      setStatusMessage(error instanceof Error ? error.message : 'Failed to save settings');\n      \n      // Reset status after 3 seconds\n      setTimeout(() => {\n        setSaveStatus('idle');\n        setStatusMessage('');\n      }, 3000);\n    }\n  };\n\n  // Helper function to extract error message from various error types\n  const getErrorMessage = (error: any): string => {\n    if (typeof error === 'string') return error;\n    if (error instanceof Error) return error.message;\n    if (error && typeof error === 'object') {\n      if ('message' in error) return String(error.message);\n      if ('error' in error) return String(error.error);\n      try {\n        return JSON.stringify(error); // Last resort - convert object to string\n      } catch (e) {\n        return \"Cannot display error details\";\n      }\n    }\n    return 'Unknown error occurred';\n  };\n\n  const testConnection = async () => {\n    try {\n      setSaveStatus('idle');\n      setStatusMessage('Testing connection...');\n\n      // 하드코딩된 API 키와 시크릿으로 인증 테스트 (이미 테스트 완료된 것)\n      const testApiKey = \"4f5eb1e973348c67f7db\";\n      const testApiSecret = \"76c752db760ae75231ea6e7c2729da9f9318c44671c46b292c64e5855c4d9884\";\n      \n      const testResponse = await fetch('https://api.pinata.cloud/data/testAuthentication', {\n        method: 'GET',\n        headers: {\n          'pinata_api_key': testApiKey,\n          'pinata_secret_api_key': testApiSecret\n        }\n      });\n      \n      if (!testResponse.ok) {\n        const errorData = await testResponse.json().catch(() => ({}));\n        throw new Error(errorData.error || `Authentication failed with status ${testResponse.status}`);\n      }\n      \n      console.log('API 키 인증 성공!');\n      \n      // 성공한 키를 상태와 로컬스토리지에 저장\n      setApiKey(testApiKey);\n      setApiSecret(testApiSecret);\n      setUseJwt(false);\n      \n      localStorage.setItem('pinataApiKey', testApiKey);\n      localStorage.setItem('pinataApiSecret', testApiSecret);\n      localStorage.removeItem('pinataJWT');\n      \n      // 성공 메시지 설정\n      setSaveStatus('success');\n      setStatusMessage('Connection successful! Credentials saved.');\n      \n      // Reset status after 3 seconds\n      setTimeout(() => {\n        setSaveStatus('idle');\n        setStatusMessage('');\n      }, 3000);\n    } catch (error) {\n      console.error('Pinata connection test failed:', error);\n      \n      // Extract meaningful error message using our helper function\n      const errorMessage = getErrorMessage(error);\n      \n      setSaveStatus('error');\n      setStatusMessage(`Connection failed: ${errorMessage}`);\n      \n      // Reset status after 5 seconds\n      setTimeout(() => {\n        setSaveStatus('idle');\n        setStatusMessage('');\n      }, 5000);\n    }\n  };\n\n  const clearSettings = () => {\n    localStorage.removeItem('pinataApiKey');\n    localStorage.removeItem('pinataApiSecret');\n    localStorage.removeItem('pinataJWT');\n    \n    setApiKey('');\n    setApiSecret('');\n    setJwt('');\n    \n    setSaveStatus('success');\n    setStatusMessage('Settings cleared');\n    \n    // Reset status after 3 seconds\n    setTimeout(() => {\n      setSaveStatus('idle');\n      setStatusMessage('');\n    }, 3000);\n  };\n\n  const testDirectApi = async () => {\n    try {\n      setSaveStatus('idle');\n      setStatusMessage('Testing direct API connection...');\n      \n      // 하드코딩된 값으로 직접 API 테스트\n      const testApiKey = \"4f5eb1e973348c67f7db\";\n      const testApiSecret = \"76c752db760ae75231ea6e7c2729da9f9318c44671c46b292c64e5855c4d9884\";\n      \n      // 로컬스토리지에 저장\n      localStorage.setItem('pinataApiKey', testApiKey);\n      localStorage.setItem('pinataApiSecret', testApiSecret);\n      localStorage.removeItem('pinataJWT');\n      \n      // UI 업데이트\n      setApiKey(testApiKey);\n      setApiSecret(testApiSecret);\n      setUseJwt(false);\n      \n      setSaveStatus('success');\n      setStatusMessage('API 키가 저장되었습니다. 이제 NFT 업로드를 시도해보세요.');\n    } catch (error) {\n      console.error('API 키 저장 오류:', error);\n      setSaveStatus('error');\n      setStatusMessage(`오류 발생: ${getErrorMessage(error)}`);\n    }\n  };\n\n  const checkStoredSettings = () => {\n    const apiKeyFromStorage = localStorage.getItem('pinataApiKey');\n    const apiSecretFromStorage = localStorage.getItem('pinataApiSecret');\n    const jwtFromStorage = localStorage.getItem('pinataJWT');\n    \n    console.log('로컬스토리지에 저장된 설정:');\n    console.log('API Key:', apiKeyFromStorage);\n    console.log('API Secret 존재:', !!apiSecretFromStorage);\n    console.log('JWT 존재:', !!jwtFromStorage);\n    \n    alert(`Pinata 설정 정보:\\nAPI Key: ${apiKeyFromStorage || '없음'}\\nAPI Secret: ${apiSecretFromStorage ? '저장됨' : '없음'}\\nJWT: ${jwtFromStorage ? '저장됨' : '없음'}`);\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow mb-8\">\n      <h2 className=\"text-xl font-medium text-gray-900 mb-4\">Pinata IPFS Settings</h2>\n      <p className=\"text-gray-600 mb-6\">\n        Connect your Pinata account to store NFT images and metadata on IPFS.\n        <a \n          href=\"https://app.pinata.cloud/signin\" \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n          className=\"ml-2 text-indigo-600 hover:text-indigo-500\"\n        >\n          Don't have an account? Sign up\n        </a>\n      </p>\n\n      <div className=\"mb-4\">\n        <div className=\"flex items-center\">\n          <input\n            id=\"use-api-key\"\n            type=\"radio\"\n            checked={!useJwt}\n            onChange={() => setUseJwt(false)}\n            className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n          />\n          <label htmlFor=\"use-api-key\" className=\"ml-2 block text-sm font-medium text-gray-700\">\n            API Key Authentication\n          </label>\n        </div>\n        <div className=\"flex items-center mt-2\">\n          <input\n            id=\"use-jwt\"\n            type=\"radio\"\n            checked={useJwt}\n            onChange={() => setUseJwt(true)}\n            className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n          />\n          <label htmlFor=\"use-jwt\" className=\"ml-2 block text-sm font-medium text-gray-700\">\n            JWT Authentication (Recommended)\n          </label>\n        </div>\n      </div>\n\n      {!useJwt ? (\n        <div className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"apiKey\" className=\"block text-sm font-medium text-gray-700\">\n              API Key\n            </label>\n            <input\n              type=\"text\"\n              id=\"apiKey\"\n              value={apiKey}\n              onChange={(e) => setApiKey(e.target.value)}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n              placeholder=\"Enter your Pinata API Key\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"apiSecret\" className=\"block text-sm font-medium text-gray-700\">\n              API Secret\n            </label>\n            <input\n              type=\"password\"\n              id=\"apiSecret\"\n              value={apiSecret}\n              onChange={(e) => setApiSecret(e.target.value)}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n              placeholder=\"Enter your Pinata API Secret\"\n            />\n          </div>\n        </div>\n      ) : (\n        <div>\n          <label htmlFor=\"jwt\" className=\"block text-sm font-medium text-gray-700\">\n            JWT\n          </label>\n          <input\n            type=\"password\"\n            id=\"jwt\"\n            value={jwt}\n            onChange={(e) => setJwt(e.target.value)}\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n            placeholder=\"Enter your Pinata JWT\"\n          />\n        </div>\n      )}\n\n      {statusMessage && (\n        <div className={`mt-4 p-3 rounded ${\n          saveStatus === 'success' \n            ? 'bg-green-50 text-green-800' \n            : saveStatus === 'error' \n              ? 'bg-red-50 text-red-800'\n              : 'bg-blue-50 text-blue-800'\n        }`}>\n          {statusMessage}\n        </div>\n      )}\n\n      <div className=\"mt-6 flex flex-wrap gap-3\">\n        <button\n          type=\"button\"\n          onClick={saveSettings}\n          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          Save Settings\n        </button>\n        <button\n          type=\"button\"\n          onClick={testConnection}\n          className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n        >\n          Test Connection\n        </button>\n        <button\n          type=\"button\"\n          onClick={clearSettings}\n          className=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          Clear Settings\n        </button>\n      </div>\n      \n      <div className=\"mt-4 pt-4 border-t border-gray-200\">\n        <h3 className=\"text-md font-medium text-gray-700 mb-2\">디버깅 도구</h3>\n        <div className=\"flex flex-wrap gap-3\">\n          <button\n            type=\"button\"\n            onClick={testDirectApi}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500\"\n          >\n            API 키 적용하기\n          </button>\n          <button\n            type=\"button\"\n            onClick={checkStoredSettings}\n            className=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n          >\n            저장된 설정 확인\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PinataSettings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}