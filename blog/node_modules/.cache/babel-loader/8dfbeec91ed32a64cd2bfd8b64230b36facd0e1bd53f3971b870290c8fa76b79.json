{"ast":null,"code":"const STORAGE_KEY='platform_lectures';// Save lectures to localStorage\nexport const saveLectures=lectures=>{try{localStorage.setItem(STORAGE_KEY,JSON.stringify(lectures));}catch(error){console.error('Error saving lectures to localStorage:',error);}};// Get all lectures from localStorage\nexport const getLectures=()=>{try{const lecturesData=localStorage.getItem(STORAGE_KEY);if(!lecturesData)return[];return JSON.parse(lecturesData);}catch(error){console.error('Error retrieving lectures from localStorage:',error);return[];}};// Add a new lecture\nexport const addLecture=lecture=>{const lectures=getLectures();lectures.push(lecture);saveLectures(lectures);};// Update an existing lecture\nexport const updateLecture=updatedLecture=>{const lectures=getLectures();const index=lectures.findIndex(lecture=>lecture.id===updatedLecture.id);if(index!==-1){lectures[index]=updatedLecture;saveLectures(lectures);}};// Delete a lecture\nexport const deleteLecture=lectureId=>{const lectures=getLectures();const filteredLectures=lectures.filter(lecture=>lecture.id!==lectureId);saveLectures(filteredLectures);};// Get lectures for a specific module\nexport const getLecturesByModule=moduleId=>{const lectures=getLectures();return lectures.filter(lecture=>lecture.module===moduleId).sort((a,b)=>a.order-b.order);};// Get a lecture by ID\nexport const getLectureById=lectureId=>{const lectures=getLectures();return lectures.find(lecture=>lecture.id===lectureId);};// Generate a unique ID for new lectures\nexport const generateId=()=>{return Date.now().toString(36)+Math.random().toString(36).substring(2);};","map":{"version":3,"names":["STORAGE_KEY","saveLectures","lectures","localStorage","setItem","JSON","stringify","error","console","getLectures","lecturesData","getItem","parse","addLecture","lecture","push","updateLecture","updatedLecture","index","findIndex","id","deleteLecture","lectureId","filteredLectures","filter","getLecturesByModule","moduleId","module","sort","a","b","order","getLectureById","find","generateId","Date","now","toString","Math","random","substring"],"sources":["/Users/sungwoocho/Desktop/platform/blog/src/services/storage.ts"],"sourcesContent":["import { Lecture } from '../types';\n\nconst STORAGE_KEY = 'platform_lectures';\n\n// Save lectures to localStorage\nexport const saveLectures = (lectures: Lecture[]): void => {\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(lectures));\n  } catch (error) {\n    console.error('Error saving lectures to localStorage:', error);\n  }\n};\n\n// Get all lectures from localStorage\nexport const getLectures = (): Lecture[] => {\n  try {\n    const lecturesData = localStorage.getItem(STORAGE_KEY);\n    if (!lecturesData) return [];\n    return JSON.parse(lecturesData);\n  } catch (error) {\n    console.error('Error retrieving lectures from localStorage:', error);\n    return [];\n  }\n};\n\n// Add a new lecture\nexport const addLecture = (lecture: Lecture): void => {\n  const lectures = getLectures();\n  lectures.push(lecture);\n  saveLectures(lectures);\n};\n\n// Update an existing lecture\nexport const updateLecture = (updatedLecture: Lecture): void => {\n  const lectures = getLectures();\n  const index = lectures.findIndex(lecture => lecture.id === updatedLecture.id);\n  \n  if (index !== -1) {\n    lectures[index] = updatedLecture;\n    saveLectures(lectures);\n  }\n};\n\n// Delete a lecture\nexport const deleteLecture = (lectureId: string): void => {\n  const lectures = getLectures();\n  const filteredLectures = lectures.filter(lecture => lecture.id !== lectureId);\n  saveLectures(filteredLectures);\n};\n\n// Get lectures for a specific module\nexport const getLecturesByModule = (moduleId: string): Lecture[] => {\n  const lectures = getLectures();\n  return lectures\n    .filter(lecture => lecture.module === moduleId)\n    .sort((a, b) => a.order - b.order);\n};\n\n// Get a lecture by ID\nexport const getLectureById = (lectureId: string): Lecture | undefined => {\n  const lectures = getLectures();\n  return lectures.find(lecture => lecture.id === lectureId);\n};\n\n// Generate a unique ID for new lectures\nexport const generateId = (): string => {\n  return Date.now().toString(36) + Math.random().toString(36).substring(2);\n};"],"mappings":"AAEA,KAAM,CAAAA,WAAW,CAAG,mBAAmB,CAEvC;AACA,MAAO,MAAM,CAAAC,YAAY,CAAIC,QAAmB,EAAW,CACzD,GAAI,CACFC,YAAY,CAACC,OAAO,CAACJ,WAAW,CAAEK,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC,CAC7D,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAChE,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,WAAW,CAAGA,CAAA,GAAiB,CAC1C,GAAI,CACF,KAAM,CAAAC,YAAY,CAAGP,YAAY,CAACQ,OAAO,CAACX,WAAW,CAAC,CACtD,GAAI,CAACU,YAAY,CAAE,MAAO,EAAE,CAC5B,MAAO,CAAAL,IAAI,CAACO,KAAK,CAACF,YAAY,CAAC,CACjC,CAAE,MAAOH,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,CAAEA,KAAK,CAAC,CACpE,MAAO,EAAE,CACX,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,UAAU,CAAIC,OAAgB,EAAW,CACpD,KAAM,CAAAZ,QAAQ,CAAGO,WAAW,CAAC,CAAC,CAC9BP,QAAQ,CAACa,IAAI,CAACD,OAAO,CAAC,CACtBb,YAAY,CAACC,QAAQ,CAAC,CACxB,CAAC,CAED;AACA,MAAO,MAAM,CAAAc,aAAa,CAAIC,cAAuB,EAAW,CAC9D,KAAM,CAAAf,QAAQ,CAAGO,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAS,KAAK,CAAGhB,QAAQ,CAACiB,SAAS,CAACL,OAAO,EAAIA,OAAO,CAACM,EAAE,GAAKH,cAAc,CAACG,EAAE,CAAC,CAE7E,GAAIF,KAAK,GAAK,CAAC,CAAC,CAAE,CAChBhB,QAAQ,CAACgB,KAAK,CAAC,CAAGD,cAAc,CAChChB,YAAY,CAACC,QAAQ,CAAC,CACxB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAmB,aAAa,CAAIC,SAAiB,EAAW,CACxD,KAAM,CAAApB,QAAQ,CAAGO,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAc,gBAAgB,CAAGrB,QAAQ,CAACsB,MAAM,CAACV,OAAO,EAAIA,OAAO,CAACM,EAAE,GAAKE,SAAS,CAAC,CAC7ErB,YAAY,CAACsB,gBAAgB,CAAC,CAChC,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,mBAAmB,CAAIC,QAAgB,EAAgB,CAClE,KAAM,CAAAxB,QAAQ,CAAGO,WAAW,CAAC,CAAC,CAC9B,MAAO,CAAAP,QAAQ,CACZsB,MAAM,CAACV,OAAO,EAAIA,OAAO,CAACa,MAAM,GAAKD,QAAQ,CAAC,CAC9CE,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACE,KAAK,CAAGD,CAAC,CAACC,KAAK,CAAC,CACtC,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,cAAc,CAAIV,SAAiB,EAA0B,CACxE,KAAM,CAAApB,QAAQ,CAAGO,WAAW,CAAC,CAAC,CAC9B,MAAO,CAAAP,QAAQ,CAAC+B,IAAI,CAACnB,OAAO,EAAIA,OAAO,CAACM,EAAE,GAAKE,SAAS,CAAC,CAC3D,CAAC,CAED;AACA,MAAO,MAAM,CAAAY,UAAU,CAAGA,CAAA,GAAc,CACtC,MAAO,CAAAC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACF,QAAQ,CAAC,EAAE,CAAC,CAACG,SAAS,CAAC,CAAC,CAAC,CAC1E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}