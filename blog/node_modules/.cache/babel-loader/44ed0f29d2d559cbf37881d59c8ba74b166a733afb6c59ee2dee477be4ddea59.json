{"ast":null,"code":"import React,{useState}from'react';import{Tab}from'@headlessui/react';import NFTContractForm from'../components/NFTContractForm';import MetadataForm from'../components/MetadataForm';import NFTMinter from'../components/NFTMinter';import MetadataViewer from'../components/MetadataViewer';import PinataSettings from'../components/PinataSettings';import{MyNFTAbi}from'../abis/MyNFTabi';// We'll use this for internal reference but not directly in the component\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const exampleContractFormat={name:\"My NFT Collection\",address:\"0x5f2A098d1A2F39c3119bFa1d4B250ccCf10597B1\",abi:MyNFTAbi,network:\"Kairos Testnet\"};function classNames(){for(var _len=arguments.length,classes=new Array(_len),_key=0;_key<_len;_key++){classes[_key]=arguments[_key];}return classes.filter(Boolean).join(' ');}const NFTStudio=()=>{const[selectedIndex,setSelectedIndex]=useState(0);const[tokenURI,setTokenURI]=useState(null);const[showSettings,setShowSettings]=useState(true);const handleMetadataStored=uri=>{setTokenURI(uri);setSelectedIndex(2);// Switch to the Minting tab\n};const handleContractSaved=()=>{// After contract is saved, switch to metadata tab if no token URI yet\nif(!tokenURI){setSelectedIndex(1);}};const tabs=[{name:'Contracts',current:selectedIndex===0},{name:'Create Metadata',current:selectedIndex===1},{name:'Mint NFT',current:selectedIndex===2},{name:'Metadata Library',current:selectedIndex===3}];return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-10\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900\",children:\"NFT Studio\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 text-gray-600\",children:\"Create, store, and mint NFTs with ease\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowSettings(!showSettings),className:\"text-indigo-600 hover:text-indigo-800 font-medium\",children:showSettings?'Hide API Settings':'Show API Settings'})}),showSettings&&/*#__PURE__*/_jsx(PinataSettings,{}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full\",children:/*#__PURE__*/_jsxs(Tab.Group,{selectedIndex:selectedIndex,onChange:setSelectedIndex,children:[/*#__PURE__*/_jsx(Tab.List,{className:\"flex space-x-1 rounded-xl bg-blue-900/20 p-1\",children:tabs.map(tab=>/*#__PURE__*/_jsx(Tab,{className:_ref=>{let{selected}=_ref;return classNames('w-full rounded-lg py-2.5 text-sm font-medium leading-5','ring-white ring-opacity-60 ring-offset-2 ring-offset-blue-400 focus:outline-none focus:ring-2',selected?'bg-white text-blue-700 shadow':'text-blue-100 hover:bg-white/[0.12] hover:text-white');},children:tab.name},tab.name))}),/*#__PURE__*/_jsxs(Tab.Panels,{className:\"mt-6\",children:[/*#__PURE__*/_jsxs(Tab.Panel,{className:\"rounded-xl bg-white p-6 shadow\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-medium text-gray-900 mb-4\",children:\"NFT Contracts\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6\",children:\"Add your NFT smart contract details here. You'll need the contract address and ABI.\"}),/*#__PURE__*/_jsx(NFTContractForm,{onContractSaved:handleContractSaved})]}),/*#__PURE__*/_jsxs(Tab.Panel,{className:\"rounded-xl bg-white p-6 shadow\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-medium text-gray-900 mb-4\",children:\"Create NFT Metadata\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6\",children:\"Upload an image and create metadata for your NFT\"}),/*#__PURE__*/_jsx(MetadataForm,{onMetadataStored:handleMetadataStored})]}),/*#__PURE__*/_jsxs(Tab.Panel,{className:\"rounded-xl bg-white p-6 shadow\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-medium text-gray-900 mb-4\",children:\"Mint NFT\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6\",children:\"Mint your NFT using the metadata you created\"}),tokenURI?/*#__PURE__*/_jsx(NFTMinter,{tokenURI:tokenURI}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center p-8 border border-dashed border-gray-300 rounded-lg\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"No metadata created yet. Please go to the \\\"Create Metadata\\\" tab first.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedIndex(1),className:\"mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700\",children:\"Create Metadata\"})]})]}),/*#__PURE__*/_jsxs(Tab.Panel,{className:\"rounded-xl bg-white p-6 shadow\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-medium text-gray-900 mb-4\",children:\"Metadata Library\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6\",children:\"View and manage all your stored metadata\"}),/*#__PURE__*/_jsx(MetadataViewer,{})]})]})]})})]});};export default NFTStudio;","map":{"version":3,"names":["React","useState","Tab","NFTContractForm","MetadataForm","NFTMinter","MetadataViewer","PinataSettings","MyNFTAbi","jsx","_jsx","jsxs","_jsxs","exampleContractFormat","name","address","abi","network","classNames","_len","arguments","length","classes","Array","_key","filter","Boolean","join","NFTStudio","selectedIndex","setSelectedIndex","tokenURI","setTokenURI","showSettings","setShowSettings","handleMetadataStored","uri","handleContractSaved","tabs","current","className","children","onClick","Group","onChange","List","map","tab","_ref","selected","Panels","Panel","onContractSaved","onMetadataStored"],"sources":["/Users/sungwoocho/Desktop/platform/blog/src/pages/NFTStudio.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tab } from '@headlessui/react';\nimport NFTContractForm from '../components/NFTContractForm';\nimport MetadataForm from '../components/MetadataForm';\nimport NFTMinter from '../components/NFTMinter';\nimport MetadataViewer from '../components/MetadataViewer';\nimport PinataSettings from '../components/PinataSettings';\nimport { MyNFTAbi } from '../abis/MyNFTabi';\n\n// We'll use this for internal reference but not directly in the component\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst exampleContractFormat = {\n  name: \"My NFT Collection\",\n  address: \"0x5f2A098d1A2F39c3119bFa1d4B250ccCf10597B1\",\n  abi: MyNFTAbi,\n  network: \"Kairos Testnet\"\n};\n\nfunction classNames(...classes: string[]): string {\n  return classes.filter(Boolean).join(' ');\n}\n\nconst NFTStudio = () => {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [tokenURI, setTokenURI] = useState<string | null>(null);\n  const [showSettings, setShowSettings] = useState(true);\n\n  const handleMetadataStored = (uri: string): void => {\n    setTokenURI(uri);\n    setSelectedIndex(2); // Switch to the Minting tab\n  };\n\n  const handleContractSaved = (): void => {\n    // After contract is saved, switch to metadata tab if no token URI yet\n    if (!tokenURI) {\n      setSelectedIndex(1);\n    }\n  };\n\n  const tabs = [\n    { name: 'Contracts', current: selectedIndex === 0 },\n    { name: 'Create Metadata', current: selectedIndex === 1 },\n    { name: 'Mint NFT', current: selectedIndex === 2 },\n    { name: 'Metadata Library', current: selectedIndex === 3 },\n  ];\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">NFT Studio</h1>\n        <p className=\"mt-2 text-gray-600\">\n          Create, store, and mint NFTs with ease\n        </p>\n      </div>\n\n      {/* Toggle for settings */}\n      <div className=\"mb-6\">\n        <button \n          onClick={() => setShowSettings(!showSettings)}\n          className=\"text-indigo-600 hover:text-indigo-800 font-medium\"\n        >\n          {showSettings ? 'Hide API Settings' : 'Show API Settings'}\n        </button>\n      </div>\n\n      {/* Conditionally show Pinata Settings */}\n      {showSettings && <PinataSettings />}\n\n      <div className=\"w-full\">\n        <Tab.Group selectedIndex={selectedIndex} onChange={setSelectedIndex}>\n          <Tab.List className=\"flex space-x-1 rounded-xl bg-blue-900/20 p-1\">\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.name}\n                className={({ selected }) =>\n                  classNames(\n                    'w-full rounded-lg py-2.5 text-sm font-medium leading-5',\n                    'ring-white ring-opacity-60 ring-offset-2 ring-offset-blue-400 focus:outline-none focus:ring-2',\n                    selected\n                      ? 'bg-white text-blue-700 shadow'\n                      : 'text-blue-100 hover:bg-white/[0.12] hover:text-white'\n                  )\n                }\n              >\n                {tab.name}\n              </Tab>\n            ))}\n          </Tab.List>\n          <Tab.Panels className=\"mt-6\">\n            {/* Contracts Panel */}\n            <Tab.Panel className=\"rounded-xl bg-white p-6 shadow\">\n              <h2 className=\"text-xl font-medium text-gray-900 mb-4\">\n                NFT Contracts\n              </h2>\n              <p className=\"text-gray-600 mb-6\">\n                Add your NFT smart contract details here. You'll need the contract address and ABI.\n              </p>\n              <NFTContractForm onContractSaved={handleContractSaved} />\n            </Tab.Panel>\n\n            {/* Create Metadata Panel */}\n            <Tab.Panel className=\"rounded-xl bg-white p-6 shadow\">\n              <h2 className=\"text-xl font-medium text-gray-900 mb-4\">\n                Create NFT Metadata\n              </h2>\n              <p className=\"text-gray-600 mb-6\">\n                Upload an image and create metadata for your NFT\n              </p>\n              <MetadataForm onMetadataStored={handleMetadataStored} />\n            </Tab.Panel>\n\n            {/* Mint NFT Panel */}\n            <Tab.Panel className=\"rounded-xl bg-white p-6 shadow\">\n              <h2 className=\"text-xl font-medium text-gray-900 mb-4\">\n                Mint NFT\n              </h2>\n              <p className=\"text-gray-600 mb-6\">\n                Mint your NFT using the metadata you created\n              </p>\n              {tokenURI ? (\n                <NFTMinter tokenURI={tokenURI} />\n              ) : (\n                <div className=\"text-center p-8 border border-dashed border-gray-300 rounded-lg\">\n                  <p className=\"text-gray-500\">\n                    No metadata created yet. Please go to the \"Create Metadata\" tab first.\n                  </p>\n                  <button\n                    onClick={() => setSelectedIndex(1)}\n                    className=\"mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700\"\n                  >\n                    Create Metadata\n                  </button>\n                </div>\n              )}\n            </Tab.Panel>\n\n            {/* Metadata Library Panel */}\n            <Tab.Panel className=\"rounded-xl bg-white p-6 shadow\">\n              <h2 className=\"text-xl font-medium text-gray-900 mb-4\">\n                Metadata Library\n              </h2>\n              <p className=\"text-gray-600 mb-6\">\n                View and manage all your stored metadata\n              </p>\n              <MetadataViewer />\n            </Tab.Panel>\n          </Tab.Panels>\n        </Tab.Group>\n      </div>\n    </div>\n  );\n};\n\nexport default NFTStudio;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}